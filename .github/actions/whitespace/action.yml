name: Whitespace
description: Run Whitespace steps

inputs:
  exclude:
    description: 'Multiple strings parameter'
    required: false
    type: string

runs:
  using: composite
  steps:
    - name: Check for bad whitespace changes
      shell: bash
      run: |
        set -e -o pipefail

        # On pull requests, HEAD^1 will always be the merge base
        git diff --check HEAD^1                         \
          ':!3rd-party/'     `# third-party submodules` \
          ':!data/'          `# data files`             \
          ':!docs/.sphinx/'  `# vendored`

    - name: Check for missing newline at EOF
      shell: bash
      run: |
        set -e -o pipefail

        BAD_ENDING='(?:\n\n|[^\n])\z' # multiple or no newline at EOF

        # using ":!<path>" for excluding pathspecs. Look for pathspec in `man gitglossary` for more
        git grep --no-color -Ilz '' --      `# list text files in the repo; pathspecs follow` \
          ':!3rd-party/'                    `# third-party submodules`                        \
          ':!data/'                         `# data files`                                    \
          ':!docs/.sphinx/'                 `# vendored starter pack`                         \
          | xargs -0 grep -lzP "$BAD_ENDING" # grep their full contents for bad endings

        if [ $? -eq 0 ]; then
          echo "##[error] Files above end with multiple or no newline at all"
          exit 1
        fi
