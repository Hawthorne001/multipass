name: Windows

on:
  push:
    branches:
    - full
    - release/[0-9]+.[0-9]+
    tags:
    - v[0-9]+.[0-9]+.[0-9]+
  pull_request:

jobs:
  Lint:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'pull_request' }}

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Run clang-format through the diff
      uses: ./.github/actions/lint

  Build-Test:
    needs: Lint
    # Need to explicitly continue on Lint getting skipped.
    if: ${{ always() && needs.Lint.result != 'failure' }}

    runs-on: windows-latest

    env:
      BUILD_DIR: ../build

    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Install Dependencies from Choco
      uses: crazy-max/ghaction-chocolatey@v1.3.0
      with:
        args:
          install --yes
            qemu-img

    - name: Download OpenSSL
      uses: carlosperate/download-file-action@v1.0.3
      with:
        file-url: http://wiki.overbyte.eu/arch/openssl-1.1.1c-win64.zip
        file-name: openssl.zip
        location: ${{ github.workspace }}/../

    - name: Download YASM
      uses: carlosperate/download-file-action@v1.0.3
      with:
        file-url: https://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe
        file-name: yasm.exe
        location: ${{ github.workspace }}/../

    - name: Enable symlinks
      run: git config --global core.symlinks true

    - name: Check out
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check out submodules and fetch tags
      uses: ./.github/actions/checkout

    - name: Determine build parameters
      id: build-params
      uses: ./.github/actions/build-params

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1.3.0

    - name: Unpack OpenSSL
      run: 7z x -o"openssl-1.1.1c-win64" ../openssl.zip

    - name: Build
      uses: lukka/run-cmake@v2
      env:
        ASM_NASM: "${{ github.workspace }}\\..\\yasm.exe"
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeBuildType: RelWithDebInfo
        buildDirectory: ${{ env.BUILD_DIR }}
        cmakeAppendedArgs:
          -GNinja
          -DCMAKE_C_COMPILER=cl.exe
          -DCMAKE_CXX_COMPILER=cl.exe
          -DMULTIPASS_UPSTREAM=origin
          -DMULTIPASS_BUILD_LABEL=${{ steps.build-params.outputs.label }}

    - name: Test
      continue-on-error: true
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        bin/multipass_tests.exe

    - name: Package
      id: cmake-package
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        cmake --build . --target package
        echo "::set-output name=name::$( ( Get-ChildItem multipass-*.exe ).Name )"
        echo "::set-output name=path::$( ( Get-ChildItem multipass-*.exe ).FullName )"

    - name: Get NSIS logs
      if: ${{ steps.cmake-package.outcome == 'failure' }}
      run: cat ${{ env.BUILD_DIR }}/_CPack_Packages/win64/NSIS/NSISOutput.log

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.cmake-package.outputs.name }}
        path: ${{ steps.cmake-package.outputs.path }}
        if-no-files-found: error
