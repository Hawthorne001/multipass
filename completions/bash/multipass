# Copyright Â© 2017 Canonical Ltd.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

_multipass_complete()
{
    _multipass_instances()
    {
        local state=$1

        local cmd="multipass list"
        [ -n "$state" ] && cmd="$cmd | \grep -E '$state'"

        opts=$( \eval $cmd | \grep -Ev '(\+--|Name)' | \awk '{print $1}' )
    }

    local cur cmd opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    cmd="${COMP_WORDS[1]}"
    multipass_cmds="shell delete exec find help info launch list mount purge \
                    recover start stop umount version"


    if [[ ${cur} == -* ]]; then
        case "${cmd}" in
            "shell"|"exec"|"find"|"help"|"info"|"list"|"purge"|"umount"|"version")
                opts="--help --verbose"
            ;;
            "delete")
                opts="--help --verbose --all --purge"
            ;;
            "launch")
                opts="--help --verbose --cpus --disk --mem --name --cloud-init"
            ;;
            "mount")
                opts="--help --verbose --gid-map --uid-map"
            ;;
            "recover"|"start"|"stop")
                opts="--help --verbose --all"
            ;;
            *)
                opts="--help --verbose"
            ;;
        esac
    else
        case "${cmd}" in
            "shell"|"exec"|"stop")
                _multipass_instances "RUNNING"
            ;;
            "start")
                _multipass_instances "STOPPED"
            ;;
            "info"|"umount")
                _multipass_instances
            ;;
            "mount")
                local source_set=0
                local prev
                _get_comp_words_by_ref -n := -w WORDS -i CWORD cur prev
                # Scan through the current command line to detect if the source
                # positional arg has been set.
                for ((i=2; i<CWORD; i++)); do
                    if [[ "${WORDS[i]}" != -* ]] && \
                       ([[ "${WORDS[i-1]}" != -* ]] || [[ "${WORDS[i-1]}" == *=* ]]); then
                            source_set=1
                            break
                    fi
                done

                if [ ${source_set} == 0 ] ; then
                    if [[ ${prev} != -* ]] || ([[ ${prev} == -* ]] && [[ ${prev} == *=* ]]); then
                        COMPREPLY=( $(compgen -o plusdirs -- ${cur}) )
                    fi
                elif [ ${source_set} == 1 ] && [[ ${prev} != -* ]]; then
                    _multipass_instances
                fi
            ;;
            "help")
                opts=$multipass_cmds
            ;;
        esac
    fi

    if [[ -z ${opts} && ${COMP_CWORD} -eq 1 ]]; then
        opts=$multipass_cmds
    fi

    if [[ -n "${opts}" ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    fi

    return 0
}
complete -F _multipass_complete multipass
